openapi: 3.0.3
info:
  description: Restaurant service api
  version: 1.0.0
  title: Restaurant Service
servers:
  - url: /v0
paths:
  /merchant:
    post:
      summary: create a new merchant
      description: ''
      operationId: app.create_merchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant'
      responses:
        '200':
          description: New Merchant information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
    get:
      summary: get all merchant
      description: ''
      operationId: app.get_merchant
      responses:
        '200':
          description: Get all Merchants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
    delete:
      summary: delete a merchant
      description: ''
      operationId: app.delete_merchant
      responses:
        '200':
          description: Deleted merchant object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merchant'
    put:
      summary: put all merchant
      description: ''
      operationId: app.update_merchant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant'
      responses:
        '200':
          description: update all Merchants
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/merchant'
  /category:
    post:
      summary: create a new category.py
      description: ''
      operationId: app.create_category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
      responses:
        '200':
          description: New Category information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
    get:
      summary: get all categories
      description: ''
      operationId: app.get_all_categories
      responses:
        '200':
          description: Get all Categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
  '/category/{id}':
    get:
      summary: get category.py by id
      description: ''
      operationId: app.get_category
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get category by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
    delete:
      summary: delete a category by id
      description: ''
      operationId: app.delete_category
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Deleted category object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
    put:
      summary: update a category by id
      description: ''
      operationId: app.update_category
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
      responses:
        '200':
          description: updated category object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
  '/category/{id}/menu-items':
    get:
      summary: get all menu items in a category
      description: ''
      operationId: app.get_menu_items_from_category
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get all menu items in a category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/menu_item'
  /menu:
    get:
      summary: get menu
      description: ''
      operationId: app.get_menu
      responses:
        '200':
          description: Get menu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu'
  /menu-item:
    get:
      summary: get all menu item
      description: ''
      operationId: app.get_all_menu_items
      responses:
        '200':
          description: Get all Recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/menu_item'
    post:
      summary: create a menu item
      description: ''
      operationId: app.create_menu_item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menu_item'
      responses:
        '200':
          description: New Recipe information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_item'
  '/menu-item/{id}':
    get:
      summary: get menu item by id
      description: ''
      operationId: app.get_menu_item
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get recipe by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_item'
    delete:
      summary: delete a menu item by id
      description: ''
      operationId: app.delete_menu_item
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Deleted menu item object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_item'
    put:
      summary: update a menu item by id
      description: ''
      operationId: app.update_menu_item
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menu_item'
      responses:
        '200':
          description: updated menu item object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menu_item'
  /menu-item-to-addon-group:
    post:
      summary: create a new menu item to addon groups
      description: ''
      operationId: app.create_menu_item_to_addon_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/menuItemToAddOnGroup'
      responses:
        '200':
          description: New menu item to addon groups Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menuItemToAddOnGroup'
    get:
      summary: get all menu item to addon groups
      description: ''
      operationId: app.get_all_menu_item_to_addon_group
      responses:
        '200':
          description: Get all Menu Item To Addon Groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/menuItemToAddOnGroup'
  '/menu-item-to-addon-group/{menu_item_id}/{addon_group_id}':
    delete:
      summary: delete a menu item to addon group
      description: ''
      operationId: app.delete_menu_item_to_addon_group
      parameters:
        - $ref: '#/components/parameters/menu_item_id'
        - $ref: '#/components/parameters/addon_group_id'
      responses:
        '200':
          description: Deleted menu item to addon groups object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/menuItemToAddOnGroup'
  '/menu-item/{id}/addon-groups':
    get:
      summary: get all addon groups in a menu item
      description: ''
      operationId: app.get_addon_groups_from_menu_item
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get all addon groups in a menu item
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addonGroup'
  /addon-group:
    post:
      summary: create a new addon group
      description: ''
      operationId: app.create_addon_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addonGroup'
      responses:
        '200':
          description: New Addon Group Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonGroup'
    get:
      summary: get all add on group
      description: ''
      operationId: app.get_all_addon_groups
      responses:
        '200':
          description: Get all Addon Groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addonGroup'
  '/addon-group/{id}':
    get:
      summary: get addon group by id
      description: ''
      operationId: app.get_addon_group
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get addon group by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonGroup'
    put:
      summary: update a addon group by id
      description: ''
      operationId: app.update
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addonGroup'
      responses:
        '200':
          description: updated addon group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonGroup'
    delete:
      summary: delete a addongroup by id
      description: ''
      operationId: app.delete_addon_group
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Deleted addon group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addonGroup'
  '/addon-group/{id}/addons':
    get:
      summary: get all addons in an addon group
      description: ''
      operationId: app.get_addons_from_group
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get all addons in an addon group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addon'
  /addon:
    post:
      summary: create a new addon
      description: ''
      operationId: app.create_addon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addon'
      responses:
        '200':
          description: New Addon Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon'
    get:
      summary: get all add on
      description: ''
      operationId: app.get_all_addons
      responses:
        '200':
          description: Get all Addon
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/addon'
  '/addon/{id}':
    get:
      summary: get addon by id
      description: ''
      operationId: app.get_addon
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Get addon by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon'
    put:
      summary: update a addon by id
      description: ''
      operationId: app.update_addon
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addon'
      responses:
        '200':
          description: updated addon object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon'
    delete:
      summary: delete a addon by id
      description: ''
      operationId: app.delete_addon
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: Deleted addon object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/addon'
  /order-initial-payment:
    post:
      summary: Send payment intent to Stripe
      description: 'require, the amount > 0.0!'
      operationId: app.initial_payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initialPayment'
      responses:
        '200':
          description: get client secret
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/clientSecret'
  /order:
    post:
      summary: Create a new order
      description: ''
      operationId: app.create_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order'
      responses:
        '200':
          description: New promotion
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/createdOrder'
    get:
      summary: 'get all order '
      description: ''
      operationId: app.get_all_order
      responses:
        '200':
          description: Get get all order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/createdOrder'
  '/order/{order_id}':
    get:
      summary: Get order by ID
      description: 'Get an order '
      operationId: app.get_order
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'response order '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createdOrder'
    put:
      summary: update  order's status
      description: 'Update order '
      operationId: app.update_order
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: 'response order '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createdOrder'
  /order/promocode:
    post:
      summary: Validate  a promotion code from an order
      description: ''
      operationId: app.validate_promo_code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/promocode'
      responses:
        '200':
          description: New promotion
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promocode'
  /order/payment-intent:
    post:
      summary: Get payment intent
      description: ''
      operationId: app.get_payment_intent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIntentInput'
      responses:
        '200':
          description: New promotion
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentIntent'

  /promotion:
    post:
      summary: Create a new promotion
      description: ''
      operationId: app.create_promotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/promotion'
      responses:
        '200':
          description: New promotion
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotion'
    get:
      summary: 'get all promotion '
      description: ''
      operationId: app.get_all_promotion
      responses:
        '200':
          description: Get get all promotion
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/promotion'
  '/promotion/{id}':
    delete:
      summary: delete a promotion by ID
      description: ''
      operationId: app.delete_promotion
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotion'
    put:
      summary: update a promotion id
      description: 'Update a promotion  '
      operationId: app.update_promotion
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/promotion'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotion'
    get:
      summary: get promotion type  by id
      description: ''
      operationId: app.get_promotion
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotion'
  /promotiontype:
    post:
      summary: create a new  promotion type
      description: ''
      operationId: app.create_promotion_type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/promotionType'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotionType'
    get:
      summary: get all promotion types
      description: ''
      operationId: app.get_all_promotion_type
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/promotionType'
  '/promotiontype/{id}':
    delete:
      summary: delete a promotion type by id
      description: ''
      operationId: app.delete_promotion_type
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: ' deleted promotion type'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotionType'
    put:
      summary: update a promotion type by id
      description: Update a promotion type
      operationId: app.update_promotion_type
      parameters:
        - $ref: '#/components/parameters/uuid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/promotionType'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotionType'
    get:
      summary: get promotion type  by id
      description: ''
      operationId: app.get_promotion_type
      parameters:
        - $ref: '#/components/parameters/uuid'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/promotionType'
  /promotiontype/extra-pa:
    post:
      summary: Create a new extra percentage for all items
      description: ''
      operationId: app.create_extra_percentage_all
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extra_pa'
      responses:
        '200':
          description: 'New promotion: extra percentages off for all items'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/extra_pa'
    get:
      summary: 'to get all promotion type: extra percentage  '
      description: ''
      operationId: app.get_extra_percentage_all
      responses:
        '200':
          description: 'List of all promotion type: extra percentage for all items '
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/extra_pa'
  '/promotiontype/extra-pa/{extra_pa_id}':
    delete:
      summary: 'delete the promotion type: extra percentage off for all'
      description: ''
      operationId: app.delete_extra_percentage_all
      parameters:
        - $ref: '#/components/parameters/extra_pa'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/extra_pa'
    put:
      summary: 'update the percent off of promotion tyep: extra percentage off for all'
      description: 'Update percent off '
      operationId: app.update_extra_percentage_all
      parameters:
        - $ref: '#/components/parameters/extra_pa'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extra_pa'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/extra_pa'
    get:
      summary: get promotion type  by id
      description: ''
      operationId: app.get_extra_percentage_all_id
      parameters:
        - $ref: '#/components/parameters/extra_pa'
      responses:
        '200':
          description: ' '
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/extra_pa'
components:
  parameters:
    menu_item_id:
      name: menu_item_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    addon_group_id:
      name: addon_group_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    uuid:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    extra_pa:
      name: extra_pa_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
  schemas:
    merchant:
      type: object
      required:
        - name
        - address
        - phone
        - hours
      properties:
        createdTime:
          type: string
          format: date-time
          description: Datetime the merchant was created
        name:
          type: string
          description: Name of the merchant
        phone:
          type: string
          description: Business phone number
        address:
          type: string
          description: Business address
        hours:
          description: List of all hours
          type: array
          items:
            type: object
            required:
              - start
              - end
              - day
            properties:
              start:
                type: string
                description: ...
              end:
                type: string
                description: ...
              day:
                type: string
                description: ...
              'off':
                type: boolean
                description: day off
    category:
      type: object
      required:
        - name
        - index
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for a category.py
        name:
          type: string
          description: Name of the category.py
        index:
          type: integer
          description: order to display index
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/menu_item'
        createdTime:
          type: string
          format: date-time
          description: Datetime the category was created
        updatedTime:
          type: string
          format: date-time
          description: |-
            Datetime the category was created
            # readOnly: true
    menu:
      type: object
      properties:
        categories:
          description: List of all categories
          type: array
          items:
            $ref: '#/components/schemas/category'
        addonGroups:
          description: List of all addon groups
          type: array
          items:
            $ref: '#/components/schemas/addonGroup'
    menu_item:
      type: object
      required:
        - name
        - categoryId
        - description
        - price
        - size
        - imageUrl
        - active
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier of a recipe
        addonGroupIds:
          type: array
          items:
            type: string
            format: uuid
        name:
          type: string
          description: Name of the  add on group
        categoryId:
          type: string
          format: uuid
          description: A foreign key category id from category
        description:
          type: string
          nullable: true
          description: description of a recipe
        price:
          type: number
          description: price of a recipe
        size:
          type: string
          description: size of a recipe
        imageUrl:
          type: string
          nullable: true
          description: image of a recipe
        active:
          type: boolean
          nullable: true
          description: an active status of a recipe
        isTaxable:
          type: boolean
          nullable: true
          description: tax status of a recipe
        taxRate:
          type: number
          nullable: true
          description: tax rate of a recipe
        createdTime:
          type: string
          format: date-time
          description: Datetime the menu item was created
        updatedTime:
          type: string
          format: date-time
          description: Datetime the menu item was created
    menuItemToAddOnGroup:
      type: object
      required:
        - addonGroupId
        - menuItemId
      properties:
        addonGroupId:
          type: string
          format: uuid
          description: A foreign key addon group id from addon group
        menuItemId:
          type: string
          format: uuid
          description: A foreign key menu item id from menu item group
    addon:
      type: object
      required:
        - addonGroupId
        - name
        - price
        - description
        - isTaxable
      properties:
        addonGroupId:
          type: string
          format: uuid
          description: A foreign key addon group id from addon group
        name:
          type: string
          description: Name of the addon
        price:
          type: number
          description: price of a addon
        description:
          type: string
          nullable: true
          description: description of a addon
        isTaxable:
          type: boolean
          nullable: true
          description: tax status of a addon
        createdTime:
          type: string
          format: date-time
          description: Datetime the menu item was created
        updatedTime:
          type: string
          format: date-time
          description: Datetime the menu item was created
    addonGroup:
      type: object
      required:
        - name
        - maxQuantity
        - minQuantity
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier of a recipe
        name:
          type: string
          description: Name of the add on group
        maxQuantity:
          type: number
          nullable: true
          description: Max addon quantity
        minQuantity:
          type: number
          nullable: true
          description: Min addon quantity
        createdTime:
          type: string
          format: date-time
          description: Datetime the add-on group was created
        updatedTime:
          type: string
          format: date-time
          description: Datetime the add-on group was created
    createdOrder:
      allOf:
        - $ref: '#components/schemas/order'
        - type: object
          properties:
            status:
              type: string
              enum:
                - pending
                - processing
                - shipping
                - completed
                - canceled
            subTotal:
              type: number
            discount:
              type: number
            id:
              type: string
              format: uuid
            createdTime:
              type: string
              format: date-time
            updatedTime:
              type: string
              format: date-time
    order:
      type: object
      required:
        - customer
        - items
        - taxMultiplier
        - tipMultiplier
        - paymentToken
      properties:
        customer:
          $ref: '#components/schemas/customer'
        paymentToken:
          type: string
          description: payment token
        items:
          type: array
          items:
            $ref: '#components/schemas/order_item'
        delivery:
          $ref: '#components/schemas/delivery'
        taxMultiplier:
          type: number
        tipMultiplier:
          type: number
        promoCode:
          type: string
    PaymentIntentInput:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
    PaymentIntent:
      type: object
      required:
        - clientSecret
      properties:
        clientSecret:
          type: string
    customer:
      type: object
      required:
        - firstName
        - lastName
        - phone
        - email
      properties:
        email:
          type: string
          description: customer's email
        firstName:
          type: string
          description: customer's first_name
        lastName:
          type: string
          description: customer's surname
        phone:
          type: string
          description: customer's phone
    initialPayment:
      type: object
      required:
        - amount
      properties:
        amount:
          type: number
          description: amount wish to make in this payment
    clientSecret:
      type: object
      required:
        - clientSecret
      properties:
        clientSecret:
          type: string
          description: client secret to process the other
    order_item:
      type: object
      required:
        - menuItemId
        - quantity
      properties:
        menuItemId:
          type: string
          format: uuid
          description: A unique identifier for a item
        quantity:
          type: integer
          description: number of item
        specialInstruction:
          type: string
          description: note from customer
        addOns:
          type: array
          items:
            type: string
            format: uuid
    delivery:
      type: object
      properties:
        deliveryFee:
          type: number
        info:
          $ref: '#components/schemas/pickup'
    pickup:
      type: object
      required:
        - deliveryType
      properties:
        deliveryType:
          type: string
        merchantId:
          type: string
          format: uuid
        time:
          type: string
          format: date-time
    promocode:
      type: object
      required:
        - order_id
        - promo_code
        - sub_total
        - total_discount
        - shipping_fee
        - shipping_discount
      properties:
        order_id:
          type: string
          format: uuid
          description: A unique identifier for a each order
        promo_code:
          type: string
          description: promo code
        sub_total:
          type: number
          description: sub total of the order
        total_discount:
          type: number
          description: total discount for this order
        shipping_fee:
          type: number
          description: shipping cost for this order
        shipping_discount:
          type: number
          description: shipping discount for this order
    promotion:
      type: object
      required:
        - promotiontypeId
        - description
        - isActive
        - startDate
        - endDate
        - imageUrl
        - promoCode
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for a promotion type
          readOnly: true
        promotiontypeId:
          type: string
          format: uuid
          description: A unique identifier for a promotion type
        description:
          type: string
          description: description for promotion
        isActive:
          type: boolean
          description: active or not
        startDate:
          type: string
          format: date-time
          description: Datetime the promotion begin
        endDate:
          type: string
          format: date-time
          description: Datetime the promotion end
        imageUrl:
          type: string
          description: image url
          nullable: true
        promoCode:
          type: string
          description: promo code
        createdTime:
          type: string
          format: date-time
          description: Datetime the promotion type was created
          readOnly: true
    promotionType:
      type: object
      required:
        - promotionType
        - description
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for a promotion type
          readOnly: true
        promotionType:
          type: string
          description: Name of the promotion type
        description:
          type: string
          description: description
        createdTime:
          type: string
          format: date-time
          description: Datetime the promotion type was created
          readOnly: true
    extra_pa:
      type: object
      required:
        - promotiontype_id
        - percent_off
      properties:
        id:
          type: string
          format: uuid
          description: A unique identifier for a promotion type
          readOnly: true
        promotiontype_id:
          type: string
          format: uuid
          description: A unique identifier for a promotion type
        percent_off:
          type: number
          description: percent off for the order
        updated_time:
          type: string
          format: date-time
          description: Datetime this type of promotion type was updated
          readOnly: true
